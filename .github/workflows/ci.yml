name: CI

on:
  pull_request:
  push:
    branches: [ master, trunk ]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  python:
    if: ${{ hashFiles('pyproject.toml') != '' || hashFiles('requirements*.txt') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 mypy pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Formatter (black)
        run: black --check .
      - name: Linter (flake8)
        run: flake8
      - name: Type check (mypy)
        run: mypy || true  # make non-blocking initially; tighten later
      - name: Tests (pytest)
        run: |
          if ls tests/**/*_test.py tests/test_*.py >/dev/null 2>&1; then
            pytest -q
          else
            echo "No python tests found; add tests to enforce DoD"
          fi

  node:
    if: ${{ hashFiles('package.json') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - name: Formatter (prettier)
        run: |
          npx --yes prettier --version >/dev/null 2>&1 || npm i -D prettier
          npx prettier --check .
      - name: Linter (eslint)
        run: |
          if [ -f .eslintrc* ]; then
            npx --yes eslint .
          else
            echo "No ESLint config; skip"
          fi
      - name: Tests
        run: |
          npm test --if-present

  java:
    if: ${{ hashFiles('build.gradle*') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build & test (Gradle)
        run: ./gradlew build --no-daemon
      - name: Publish test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-reports
          path: build/test-results/test/
